{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blessing\\\\Desktop\\\\projects\\\\jamstackApp\\\\frontend\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Layout from '../components/layout.js';\nimport contextCart from '../components/contextCart';\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      cart: []\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      const cart = JSON.parse(localStorage.getItem('cart'));\n\n      if (cart) {\n        this.setState({\n          cart\n        });\n      }\n    });\n\n    _defineProperty(this, \"addToCart\", product => {\n      this.setState({\n        cart: [...this.state.cart, product]\n      });\n      localStorage.setItem('cart', JSON.stringify(this.state.cart));\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(contextCart.Provider, {\n      value: {\n        cart: this.state.cart,\n        addToCart: this.addToCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/blessing/Desktop/projects/jamstackApp/frontend/pages/_app.js"],"names":["App","Layout","contextCart","MyApp","cart","JSON","parse","localStorage","getItem","setState","product","state","setItem","stringify","render","Component","pageProps","props","addToCart"],"mappings":";;;;;;;;AACA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAE7B;AACNI,MAAAA,IAAI,EAAE;AADA,KAF6B;;AAAA,+CAMjB,MAAM;AACxB,YAAMA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,UAAIJ,IAAJ,EAAU;AACR,aAAKK,QAAL,CAAc;AACZL,UAAAA;AADY,SAAd;AAGD;AACF,KAboC;;AAAA,uCAexBM,OAAD,IAAa;AACvB,WAAKD,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE,CAAC,GAAG,KAAKO,KAAL,CAAWP,IAAf,EAAqBM,OAArB;AADM,OAAd;AAGAH,MAAAA,YAAY,CAACK,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAe,KAAKF,KAAL,CAAWP,IAA1B,CAA7B;AACD,KApBoC;AAAA;;AAsBrCU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,MAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEb,QAAAA,IAAI,EAAE,KAAKO,KAAL,CAAWP,IAAnB;AAAyBc,QAAAA,SAAS,EAAE,KAAKA;AAAzC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AA/BoC","sourcesContent":["\r\nimport App from 'next/app'\r\nimport Layout from '../components/layout.js'\r\nimport contextCart from '../components/contextCart';\r\n\r\nexport default class MyApp extends App {\r\n\r\n  state = {\r\n    cart: []\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cart = JSON.parse(localStorage.getItem('cart'));\r\n    if (cart) {\r\n      this.setState({\r\n        cart\r\n      });\r\n    }\r\n  };\r\n\r\n  addToCart = (product) => {\r\n    this.setState({\r\n      cart: [...this.state.cart, product]\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props\r\n    return (\r\n      <contextCart.Provider value={{ cart: this.state.cart, addToCart: this.addToCart }}>\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </contextCart.Provider>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}